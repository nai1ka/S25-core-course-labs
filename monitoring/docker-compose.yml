version: "3.8"

networks:
  loki:

volumes:
  grafana-data:
  prom_data:

services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    mem_limit: 512M
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 2
    healthcheck:
        test: "curl -f http://localhost:3100 || exit 1"
        retries: 3
        timeout: 5s
        start_period: 5s

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
    depends_on:
      - loki
    mem_limit: 512M
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 2
    healthcheck:
        test: "curl -f http://localhost:9080 || exit 1"
        retries: 3
        timeout: 5s
        start_period: 5s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        /run.sh
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - loki
    depends_on:
      - loki
    mem_limit: 512M
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 2
    healthcheck:
        test: "curl -f http://localhost:3000 || exit 1"
        retries: 3
        timeout: 5s
        start_period: 5s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - loki
    depends_on:
      - loki
      - grafana
    mem_limit: 512M
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 2
    healthcheck:
        test: "curl -f http://localhost:9090 || exit 1"
        retries: 3
        timeout: 5s
        start_period: 5s



  python_app:
      image: nai1ka/time-service-cicd:latest
      ports:
        - "8081:8000"
      networks:
        - loki 
      mem_limit: 512M
      logging:
        driver: json-file
        options:
          max-size: 10m
          max-file: 2
      healthcheck:
        test: "curl -f http://localhost:8000 || exit 1"
        retries: 3
        timeout: 5s
        start_period: 5s

  kotlin_app:
      image: nai1ka/time-service-kotlin:latest
      ports:
        - "8082:8080"
      networks:
        - loki 
      mem_limit: 512M
      logging:
        driver: json-file
        options:
          max-size: 10m
          max-file: 2
      healthcheck:
        test: "curl -f http://localhost:8080 || exit 1"
        retries: 3
        timeout: 5s
        start_period: 5s
          